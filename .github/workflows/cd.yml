name: CD

on:
  push:
    branches: [develop]

jobs:
  CD:
    runs-on: ubuntu-latest
    steps:
      ## node setting
      - uses: actions/checkout@v3

      ## docker login
      - name: Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      ## docker build & push
      - name: Docker build & push
        env:
          NODE_ENV: ${{ secrets.NODE_ENV }}
          PORT: ${{ secrets.PORT }}
          NAVER_CLIENT_ID: ${{secrets.NAVER_CLIENT_ID}}
          NAVER_SECRET_KEY: ${{secrets.NAVER_SECRET_KEY}}
          KAKAO_BASE_URL: ${{secrets.KAKAO_BASE_URL}}
          KAKAO_REST_API_KEY: ${{secrets.KAKAO_REST_API_KEY}}
          KAKAO_CLIENT_SECRET: ${{secrets.KAKAO_CLIENT_SECRET}}
          JWT_SECRET: ${{secrets.JWT_SECRET}}
          GOOGLE_NEARBYSEARCH_API_KEY: ${{secrets.GOOGLE_NEARBYSEARCH_API_KEY}}
          MYSQL_USER: ${{secrets.MYSQL_USER}}
          MYSQL_PASSWORD: ${{secrets.MYSQL_PASSWORD}}
          DATABASE_NAME: ${{secrets.DATABASE_NAME}}
          DATABASE_URL: ${{secrets.DATABASE_URL}}
          DATABASE_PORT: ${{secrets.DATABASE_PORT}}

        run: |
          echo "JWT_SECRET=$JWT_SECRET" >> .env
          echo "GOOGLE_NEARBYSEARCH_API_KEY=$GOOGLE_NEARBYSEARCH_API_KEY" >> .env
          echo "MYSQL_USER=$MYSQL_USER" >> .env
          echo "MYSQL_PASSWORD=$MYSQL_PASSWORD" >> .env
          echo "DATABASE_NAME=$DATABASE_NAME" >> .env
          echo "DATABASE_URL=$DATABASE_URL" >> .env
          echo "DATABASE_PORT=$DATABASE_PORT" >> .env
          docker build -f Dockerfile -t hancihu/mozi-server .
          docker push hancihu/mozi-server

      ## deploy to production
      - name: Deploy MOZI Production to AWS
        uses: appleboy/ssh-action@master
        id: deploy-mozi
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ubuntu
          key: ${{ secrets.AWS_CERT }}
          envs: GITHUB_SHA
          script: |
            cd /home/ubuntu/mozi-server
            sudo docker-compose down
            sudo docker pull hancihu/mozi-server
            docker-compose up -d
            docker image prune -f
